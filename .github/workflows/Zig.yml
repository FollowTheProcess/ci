name: Zig CI

on:
  workflow_call:
    inputs:
      zig-version:
        description: The zig version to install, can be a stable version e.g. "0.13.0", a specific nightly e.g. "0.14.0-dev.2+0884a4341", "master" for latest nightly build, or "latest" for latest stable
        type: string
        required: false
        default: latest

      matrix-os:
        description: List of operating systems to test on. Must be in pseudo-JSON array syntax e.g. `'["ubuntu-latest", "windows-latest"]'` etc.
        type: string
        required: false
        default: '["ubuntu-latest", "macos-latest", "windows-latest"]'

      build-flags:
        description: User flags to pass to `zig build` e.g. "-Dmy-flag=value"
        type: string
        required: false
        default: ""

      timeout-minutes:
        description: Maximum number of minutes to let each step execute for, will be cancelled when timeout is met.
        type: number
        required: false
        default: 15

      working-directory:
        description: The working directory to be in for the entire workflow
        type: string
        required: false
        default: "."

      env:
        description: JSON string of an object containing environment variables to set for the whole workflow
        type: string
        required: false
        default: "{}"

permissions:
  contents: read

env: ${{ fromJSON(inputs.env) }}

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout-minutes }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
        shell: bash

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Zig
        uses: mlugg/setup-zig@v2
        with:
          version: ${{ inputs.zig-version }}

      - name: Format Zig Source
        run: zig fmt . --color on --check --ast-check

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
        shell: bash
    strategy:
      matrix:
        os: ${{ fromJSON(inputs.matrix-os) }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Zig
        uses: mlugg/setup-zig@v2
        with:
          version: ${{ inputs.zig-version }}

      - name: Run Tests
        run: zig build test --summary all ${{ inputs.build-flags }} --color on

  typos:
    name: Typos
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout-minutes }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
        shell: bash

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check for Typos
        uses: crate-ci/typos@v1
